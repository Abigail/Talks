/*
 * CSS for the layout of slides with images.
 * 
 * "outer_{right,middle,left}" will be the main div, using
 * a CSS grid layout. There will always be 3 rows, of sizes
 * 5vh, 84vh, and 5vh. This leaves 6vh free for the top bar.
 *
 * The top and bottom row of the grid will be empty, and
 * are filled with "bogus" divs (handled in the templates).
 *
 * A square of size 84vh will be reserved for the main image,
 * which could be on the left, middle, or right. This leaves
 * one or two spaces to the sides of the image. Since the width
 * of those spaces is flexible, their width is controlled with
 * '1fr' -- if there is only one such space, it gets all the
 * remaining space; if there are two, it's evenly divided.
 *
 * The .inner div is reserved for the main SVG image.
 * The .infobox_{right,left} divs are the spaces to the right
 * and left of the main image.
 */


div.outer_right, div.outer_left, div.outer_middle {
    margin: 0 0 0 0;
    padding-left: 5%;
    padding-right: 5%;
    display: grid;
    grid-template-rows: 5vh 84vh 5vh;
}
div.outer_right {
    grid-template-columns: 1fr 84vh;
}
div.outer_left {
    grid-template-columns: 84vh 1fr;
}
div.outer_middle {
    grid-template-columns: 1fr 84vh 1fr;
}



/*
 * Use a responsive font-size, and give it some padding between the
 * text and the image.
 */

div.infobox_right, div.infobox_left {
    font-size: 4vh;
}
div.infobox_right {
    padding-left: 1vw;
}
div.infobox_left {
    padding-right: 1vw;
}


/*
 * The word 'Trapped!' starts out hidden.
 */
span#trapped {
    display: none;
}

/*
 * CSS for the SVG
 */
rect.even {
    fill: brown;
}
rect.odd {
    fill: rgb(232,235,239);
}


/*
 * Numbers placed on the board
 * This places the text in the middle of the squares
 * (not too happy about the transform, but it does make a difference).
 */
text.number {
    font-size: 5px;
    text-anchor: middle;
    dominant-baseline: middle;
    transform: translate(0px, 0.5px);
}


circle.move {
    fill:  rgba(0,0,0,.6);
}


/*
 * Styles for the path
 */
circle.path-dot {
    fill: rgb(100,100,100);
}

circle.path-point {
    fill: black;
}


line.path-line {
   stroke-width:  .75;
   stroke:        black;
   fill:          black;
}

