#!/opt/perl/bin/perl

use 5.026;

use strict;
use warnings;
no  warnings 'syntax';

use experimental 'signatures';

use lib '/Users/abigail/Perl/CPAN/Chess-Infinite/lib';
use lib '/Users/abigail/Perl/CPAN/Colour-Name/lib';

use JSON;

use Chess::Infinite;

my $info;

my $CC_ORG = "creativecommons.org";

my %licence_info = (
    'CC0'  =>  {
        name        =>  "Creative Commons CC0",
        link        =>  "https://$CC_ORG/publicdomain/zero/1.0/deed.en",
    },
);


my %credit_info;

foreach my $piece (qw [knight king queen rook bishop pawn]) {
    $credit_info {$piece} = {
        licence      =>  'CC0',
        name         =>  'SVG SILH',
        link         =>  'https://svgsilh.com/',
    };
}


foreach my $piece (keys %credit_info) {
    my $info = $credit_info {$piece};
    my $licence = $$info {licence} || next;
    if ($licence_info {$licence}) {
        $$info {licence_link} = $licence_info {$licence} {link};
        $$info {licence}      = $licence_info {$licence} {name};
    }
}


#
# Put some limits on the paths generated
#
my %limits = (
    king   =>  {max_bounding_box  =>  20},
    queen  =>  {no_run            =>   1},
    rook   =>  {no_run            =>   1},
    pawn   =>  {max_bounding_box  =>  13},
    bishop =>  {max_bounding_box  =>  70},
);


foreach my $name (qw [Knight King Rook Queen Bishop Pawn]) {
    my $piece   = piece $name;
    my @rides   = sort {$$a [1] <=> $$b [1] ||
                        $$a [0] <=> $$b [0]} $piece -> rides;
    my $lc_name = lc $name;
    my $limits  = $limits {$lc_name};

    my $piece_info;
    $$piece_info {image}        =  $lc_name . ".svg";
    $$piece_info {moves}        = \@rides;
    $$piece_info {credits}      =  $credit_info {$lc_name};

    unless ($$limits {no_run}) {
        #
        # Run the piece, and record its movement list
        #
        $piece -> run (
            max_bounding_box   =>  $$limits {max_bounding_box},
        );

        $$piece_info {run_list}     =  $piece -> value_list;
        $$piece_info {bounding_box} =  $piece -> bounding_box;
    }

    $$info {$lc_name} = $piece_info;
}

my $json = encode_json $info;


open my $fh, ">", "JavaScript/chess_pieces_generated.js" or die "open: $!";
my $text = << "--";
//
// This is a generated file. Do not modify.
//
var chess_pieces = $json;
--
say $fh $text;

__END__
